import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';

part 'counter_event.dart';
part 'counter_state.dart';

/*
üü¢ `CounterBloc`: –û—Å–Ω–æ–≤–Ω–∏–π –∫–ª–∞—Å BLoC, —â–æ –º—ñ—Å—Ç–∏—Ç—å –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º `CounterState`.
- –û–±—Ä–æ–±–ª—è—î –ø–æ–¥—ñ—ó `IncrementCounterEvent` —ñ `DecrementCounterEvent`.
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `emit()` –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É.
- –í—Å—ñ –ø–æ–¥—ñ—ó –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è –≤ –º–µ—Ç–æ–¥–∞—Ö `_incrementCounter()` —Ç–∞ `_decrementCounter()`.
*/
class CounterBloc extends Bloc<CounterEvent, CounterState> {
  /*
  üü¢ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `CounterBloc`
  - –í–∏–∫–ª–∏–∫–∞—î `super(CounterState.initial())`, —â–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω `counter = 0`.
  - –†–µ—î—Å—Ç—Ä—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π —á–µ—Ä–µ–∑ `on<Event>((event, emit) {...})`.
  */
  CounterBloc() : super(CounterState.initial()) {
    /*
    üü¢ –û–±—Ä–æ–±–∫–∞ `IncrementCounterEvent`
    - –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É —Ü—ñ—î—ó –ø–æ–¥—ñ—ó –∑–±—ñ–ª—å—à—É—î `counter` –Ω–∞ 1.
    - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `emit()`, —â–æ–± –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞–Ω.
    */
    on<IncrementCounterEvent>(_incrementCounter);

    /*
    üü¢ –û–±—Ä–æ–±–∫–∞ `DecrementCounterEvent`
    - –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É —Ü—ñ—î—ó –ø–æ–¥—ñ—ó –∑–º–µ–Ω—à—É—î `counter` –Ω–∞ 1.
    - –õ–æ–≥—ñ–∫–∞ –≤–∏–Ω–µ—Å–µ–Ω–∞ –≤ –æ–∫—Ä–µ–º–∏–π –º–µ—Ç–æ–¥ `_decrementCounter()`.
    */
    on<DecrementCounterEvent>(_decrementCounter);
  }

  /*
  üü¢ _incrementCounter() ‚Äì –æ–±—Ä–æ–±–∫–∞ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞.
  - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ `on<IncrementCounterEvent>()`.
  - –í–∏–∫–ª–∏–∫–∞—î `emit()`, –ø–µ—Ä–µ–¥–∞—é—á–∏ –Ω–æ–≤–∏–π —Å—Ç–∞–Ω, –¥–µ `counter` –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ 1.
  */
  void _incrementCounter(
    IncrementCounterEvent event,
    Emitter<CounterState> emit,
  ) {
    emit(state.copyWith(counter: state.counter + 1));
  }

  /*
  üü¢ _decrementCounter() ‚Äì –æ–±—Ä–æ–±–∫–∞ –∑–º–µ–Ω—à–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞.
  - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ `on<DecrementCounterEvent>()`.
  - –í–∏–∫–ª–∏–∫–∞—î `emit()`, –ø–µ—Ä–µ–¥–∞—é—á–∏ –Ω–æ–≤–∏–π —Å—Ç–∞–Ω, –¥–µ `counter` –∑–º–µ–Ω—à—É—î—Ç—å—Å—è –Ω–∞ 1.
  */
  void _decrementCounter(
    DecrementCounterEvent event,
    Emitter<CounterState> emit,
  ) {
    emit(state.copyWith(counter: state.counter - 1));
  }
}
