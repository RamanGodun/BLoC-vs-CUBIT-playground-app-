part of 'counter_bloc.dart';

/*
üü¢ CounterState: –û–ø–∏—Å—É—î —Å—Ç–∞–Ω BLoC.
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `Equatable` –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ —Ç–∞ —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∑–∞–π–≤–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å UI.
- –ú—ñ—Å—Ç–∏—Ç—å –∑–º—ñ–Ω–Ω—É `counter`, —è–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞.
*/
final class CounterState extends Equatable {
  final int counter;

  const CounterState({
    required this.counter,
  });

  /*
  üü¢ –§–∞–±—Ä–∏—á–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `initial()`
  - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ (counter = 0).
  */
  factory CounterState.initial() {
    return const CounterState(counter: 0);
  }

  /*
  üü¢ –í–∏–∑–Ω–∞—á–∞—î, —è–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –±–µ—Ä—É—Ç—å —É—á–∞—Å—Ç—å —É –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—ñ —Å—Ç–∞–Ω—ñ–≤.
  - –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è `counter` –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—è, BLoC –Ω–µ –±—É–¥–µ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—É–≤–∞—Ç–∏ UI.
  */
  @override
  List<Object> get props => [counter];

  /*
  üü¢ –ó—Ä—É—á–Ω–∏–π `toString()`
  - –î–æ–ø–æ–º–∞–≥–∞—î –¥–µ–±–∞–∂–∏—Ç–∏, –ª–æ–≥—É—é—á–∏ —Å—Ç–∞–Ω —É –∑—Ä–æ–∑—É–º—ñ–ª–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
  */
  @override
  String toString() => 'CounterState(counter: $counter)';

  /*
  üü¢ copyWith() –¥–æ–∑–≤–æ–ª—è—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∫–æ–ø—ñ—ó —Å—Ç–∞–Ω—É —ñ–∑ –∑–º—ñ–Ω–µ–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.
  - –Ø–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è `counter` —î `null`, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.
  */
  CounterState copyWith({
    int? counter,
  }) {
    return CounterState(
      counter: counter ?? this.counter,
    );
  }
}
