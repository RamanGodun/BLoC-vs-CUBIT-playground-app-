import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import '../../../presentation/widgets/text_widget.dart';
import '../../../core/utils/helpers.dart';
import '../../../core/utils/show_dialog.dart';
import '../counter_on_bloc/counter_bloc.dart';
import '../counter_on_cubit/counter_cubit.dart';
import '../../../presentation/pages/other_page.dart';
import '../../../presentation/pages/theme_page.dart';

class MyHomePageLikeInCourseWas extends StatelessWidget {
  const MyHomePageLikeInCourseWas({super.key});

/*
===========================================
‚úÖ –û–°–ù–û–í–ù–ò–ô –í–ê–†–Ü–ê–ù–¢ (–°–¢–ê–ù–î–ê–†–¢–ù–ò–ô)
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `BlocListener` –¥–ª—è –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `context.select()` –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–∏—à–µ `counter`
===========================================
*/
  @override
  Widget build(BuildContext context) {
    // final readCounterCubit = context.read<CounterOnCubit>(); // ! when use CUBIT
    // final selectCounterCubit =
    //     context.select<CounterOnCubit, int>((cubit) => cubit.state.counter); // ! when use CUBIT

    return MultiBlocListener(
      listeners: [
        // ! when use BLoC, then NEXT:
        /*
      üü¢ BlocListener –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω —Å—Ç–∞–Ω—É —Ç–∞ –≤–∏–∫–ª–∏–∫—É –ø–æ–±—ñ—á–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤ (side effects).
      - –¢—É—Ç –≤—ñ–Ω —Ä–µ–∞–≥—É—î –Ω–∞ –∑–º—ñ–Ω–∏ —É `CounterBloc`.
      - –ù–ï –≤–ø–ª–∏–≤–∞—î –Ω–∞ UI –Ω–∞–ø—Ä—è–º—É, –ª–∏—à–µ –∑–∞–ø—É—Å–∫–∞—î –ø–µ–≤–Ω—ñ –¥—ñ—ó, —Ç–∞–∫—ñ —è–∫ –ø–æ–∫–∞–∑ –¥—ñ–∞–ª–æ–≥–æ–≤–æ–≥–æ –≤—ñ–∫–Ω–∞ –∞–±–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é.
      */
        BlocListener<CounterOnBloc, CounterOnBLoCState>(
          listener: (context, state) {
            if (state.counter == 3) {
              DialogService.showAlertDialog(
                  context, 'counter is ${state.counter}');
            } else if (state.counter == -1) {
              Helpers.pushTo(context, const OtherPage());
            }
          },
        ),
        // ! when use CUBIT, then NEXT:
        BlocListener<CounterOnCubit, CounterOnCubitState>(
          listener: (context, state) {
            if (state.counter == 3) {
              DialogService.showAlertDialog(
                  context, 'counter is ${state.counter}');
            } else if (state.counter == -1) {
              Helpers.pushTo(context, const OtherPage());
            }
          },
        ),
      ],
      child: Scaffold(
        appBar: AppBar(
          actions: [
            IconButton(
                onPressed: () => Helpers.pushTo(context, const ThemePage()),
                icon: const Icon(Icons.sunny))
          ],
        ),
        body: Center(
          child: ListView(
            children: [
              const SizedBox(height: 250),
              const TextWidget('–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è:', TextType.headline),
              TextWidget(
                '${context.watch<CounterOnBloc>().state.counter}',
                /*
                üìù `selectCounterCubit` –æ–Ω–æ–≤–ª—é—î UI —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ `counter`
                */
                // selectCounterCubit.toString(),
                TextType.headline,
              ),
            ],
          ),
        ),
        floatingActionButton: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            FloatingActionButton(
              onPressed: () => BlocProvider.of<CounterOnBloc>(context)
                  .add(IncrementCounterEvent()),
              // () => readCounterCubit.increment(), // ! when use CUBIT
              heroTag: 'increment',
              child: const Icon(Icons.add),
            ),
            const SizedBox(width: 10.0),
            FloatingActionButton(
              onPressed: () => context.read<CounterOnBloc>().add(
                  DecrementCounterEvent()), // üü¢ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ—ó –¥–æ BLoC:
              //  () => readCounterCubit.decrement(), // ! when sue CUBIT
              heroTag: 'decrement',
              child: const Icon(Icons.remove),
            ),
          ],
        ),
      ),
    );
  }

/*
===========================================
‚úÖ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–Ü –ü–Ü–î–•–û–î–ò
===========================================
*/

/*
===========================================
üü¢ 1. –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø `BlocConsumer`
- –ü–æ—î–¥–Ω—É—î `BlocListener` + `BlocBuilder`
- UI –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è –ø—Ä–∏ –±—É–¥—å-—è–∫–∏—Ö –∑–º—ñ–Ω–∞—Ö `state`
===========================================

 @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: BlocConsumer<CounterCubit, CounterState>(
        listener: (context, state) {
          if (state.counter == 3) {
            DialogService.showAlertDialog(
                context, 'counter is ${state.counter}');
          } else if (state.counter == -1) {
            Helpers.pushTo(context, const OtherPage());
          }
        },
        builder: (context, state) => Center(
          child: ListView(
            children: [
              const SizedBox(height: 250),
              const TextWidget('–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è:', TextType.headline),
              TextWidget(
                '${state.counter}',
                TextType.headline,
              ),
            ],
          ),
        ),
      ),
      floatingActionButton: Row(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          FloatingActionButton(
            onPressed: () => context.read<CounterCubit>().increment(),
            heroTag: 'increment',
            child: const Icon(Icons.add),
          ),
          const SizedBox(width: 10.0),
          FloatingActionButton(
            onPressed: () => context.read<CounterCubit>().decrement(),
            heroTag: 'decrement',
            child: const Icon(Icons.remove),
          ),
        ],
      ),
    );
  }

*/

/*
===========================================
üü¢ 2. –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø `Builder` + `context.select()`
- –û–Ω–æ–≤–ª—é—î –¢–Ü–õ–¨–ö–ò `counter`, –Ω–µ –≤–µ—Å—å `state`
- –ù–µ –ø–µ—Ä–µ–≤–∏–∫–ª–∏–∫–∞—î `build()`
===========================================

 @override
  Widget build(BuildContext context) {
    final readCounterCubit = context.read<CounterCubit>();

    return BlocListener<CounterCubit, CounterState>(
      listener: (context, state) {
        if (state.counter == 3) {
          DialogService.showAlertDialog(context, 'counter is ${state.counter}');
        } else if (state.counter == -1) {
          Helpers.pushTo(context, const OtherPage());
        }
      },
      child: Scaffold(
        body: Center(
          child: Builder(
            builder: (context) {
              final counter = context
                  .select<CounterCubit, int>((cubit) => cubit.state.counter);
              return ListView(
                children: [
                  TextWidget('$counter', TextType.headline),
                ],
              );
            },
          ),
        ),
        floatingActionButton: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            FloatingActionButton(
              onPressed: () => readCounterCubit.increment(),
              heroTag: 'increment',
              child: const Icon(Icons.add),
            ),
            const SizedBox(width: 10.0),
            FloatingActionButton(
              onPressed: () => readCounterCubit.decrement(),
              heroTag: 'decrement',
              child: const Icon(Icons.remove),
            ),
          ],
        ),
      ),
    );
  }
*/
}
